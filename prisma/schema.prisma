// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  name        String
  email       String    @unique
  password    String
  accessLevel String    @default("customer")
  orders      Order[]
  addresses   Address[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id                      String                   @id @default(uuid())
  productName             String
  price                   Float
  discountPercentage      Float
  stock                   Int
  rating                  Float
  brand                   String
  category                String
  subCategory             String
  introduction            String                   
  technicalSpecifications TechnicalSpecification[]
  images                  ImageUrl[]
  orderItems              OrderItem[]
  variants                Variant[]
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime                 @updatedAt
}

model Variant {
  id        String     @id @default(uuid())
  color     String
  productId String?
  product   Product?   @relation(fields: [productId], references: [id])
  images    ImageUrl[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model ImageUrl {
  id        String   @id @default(uuid())
  url       String
  productId String?
  product   Product? @relation(fields: [productId], references: [id])
  variantId String?
  variant   Variant? @relation(fields: [variantId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TechnicalSpecification {
  id              String   @id @default(uuid())
  specKey         String
  specDescription String
  productId       String?
  product         Product? @relation(fields: [productId], references: [id])
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Order {
  id         String      @id @default(uuid())
  userId     String
  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model OrderItem {
  id        String   @id @default(uuid())
  quantity  Int
  price     Float
  orderId   String
  order     Order    @relation(fields: [orderId], references: [id])
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Address {
  id        String   @id @default(uuid())
  street    String
  city      String
  state     String
  country   String
  zipCode   String
  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
